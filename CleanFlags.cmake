function(target_clean_flags target)
  if(MSVC)
    target_compile_options(${target} PRIVATE /utf-8)

    target_compile_definitions(${target} PRIVATE NOGDI)
    target_compile_definitions(${target} PRIVATE NOMINMAX)
    target_compile_definitions(${target} PRIVATE VC_EXTRALEAN)
    target_compile_definitions(${target} PRIVATE WIN32_LEAN_AND_MEAN)

    if(NOT "${CMAKE_CXX_COMPILER_ID}" MATCHES "(Apple)?[Cc]lang")
      target_compile_options(${PROJECT_NAME} PRIVATE /experimental:external /external:W0 /permissive-)
    endif()
  endif()
endfunction()

function(project_clean_flags)
  if(MSVC)
    foreach(flag_var CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
      string(REPLACE "/W3" "" ${flag_var} "${${flag_var}}")
      string(REPLACE "/EHc" "" ${flag_var} "${${flag_var}}")
      string(REPLACE "/EHsc" "" ${flag_var} "${${flag_var}}")
      string(REPLACE "/GR" "" ${flag_var} "${${flag_var}}")
    endforeach()

    if("${CMAKE_CXX_COMPILER_ID}" MATCHES "(Apple)?[Cc]lang")
      set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX "-imsvc ")
    else()
      set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX "/external:I ")
    endif()
  endif()

  if("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
    set(CMAKE_RC_FLAGS "${CMAKE_RC_FLAGS} /nologo")
  endif()
endfunction()
